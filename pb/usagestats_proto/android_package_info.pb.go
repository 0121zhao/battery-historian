// Code generated by protoc-gen-go.
// source: github.com/google/battery-historian/pb/usagestats_proto/android_package_info.proto
// DO NOT EDIT!

package usagestats

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type PackageInfo struct {
	// Apps / service name. (e.g. com.google.android.apps.books)
	PkgName *string `protobuf:"bytes,1,req,name=pkg_name" json:"pkg_name,omitempty"`
	// App version number
	VersionCode *int32 `protobuf:"varint,2,opt,name=version_code" json:"version_code,omitempty"`
	// Version name
	VersionName *string `protobuf:"bytes,3,opt,name=version_name" json:"version_name,omitempty"`
	// First install time
	FirstInstallTime *int64 `protobuf:"varint,4,opt,name=first_install_time" json:"first_install_time,omitempty"`
	// Last update time
	LastUpdateTime *int64 `protobuf:"varint,5,opt,name=last_update_time" json:"last_update_time,omitempty"`
	// The sharedUserId assigned to this package by the device.
	Uid              *int32 `protobuf:"varint,6,opt,name=uid" json:"uid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PackageInfo) Reset()         { *m = PackageInfo{} }
func (m *PackageInfo) String() string { return proto.CompactTextString(m) }
func (*PackageInfo) ProtoMessage()    {}

func (m *PackageInfo) GetPkgName() string {
	if m != nil && m.PkgName != nil {
		return *m.PkgName
	}
	return ""
}

func (m *PackageInfo) GetVersionCode() int32 {
	if m != nil && m.VersionCode != nil {
		return *m.VersionCode
	}
	return 0
}

func (m *PackageInfo) GetVersionName() string {
	if m != nil && m.VersionName != nil {
		return *m.VersionName
	}
	return ""
}

func (m *PackageInfo) GetFirstInstallTime() int64 {
	if m != nil && m.FirstInstallTime != nil {
		return *m.FirstInstallTime
	}
	return 0
}

func (m *PackageInfo) GetLastUpdateTime() int64 {
	if m != nil && m.LastUpdateTime != nil {
		return *m.LastUpdateTime
	}
	return 0
}

func (m *PackageInfo) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func init() {
}
